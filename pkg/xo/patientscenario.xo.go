// Code generated by xo. DO NOT EDIT.
// Package xo contains the types for schema 'public'.
package xo

import (
	"reflect"
	"time"

	"github.com/lib/pq"
)

// PatientScenario represents a row from 'public.patient_scenarios'.
type PatientScenario struct {
	ID             int         `db:"id" json:"id"`                           // id
	PatientID      int         `db:"patient_id" json:"patient_id"`           // patient_id
	ScenarioID     int         `db:"scenario_id" json:"scenario_id"`         // scenario_id
	Step           int         `db:"step" json:"step"`                       // step
	ScheduledStart time.Time   `db:"scheduled_start" json:"scheduled_start"` // scheduled_start
	ActualStart    pq.NullTime `db:"actual_start" json:"actual_start"`       // actual_start
	CompletedAt    pq.NullTime `db:"completed_at" json:"completed_at"`       // completed_at
	Repeatable     bool        `db:"repeatable" json:"repeatable"`           // repeatable
}

// zeroPatientScenario zero value of dto
var zeroPatientScenario = PatientScenario{}

func (t PatientScenario) IsEmpty() bool {
	return reflect.DeepEqual(t, zeroPatientScenario)
}
